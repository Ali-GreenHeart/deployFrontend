{"version":3,"sources":["pages/ForgotPassword/ForgotPassword.style.js","pages/ForgotPassword/validation.js","pages/ForgotPassword/RecoverPasswordPage.tsx"],"names":["useStyles","makeStyles","theme","container","paddingTop","overfloWx","header","fontFamily","fontSize","textAlign","firstCon","display","justifyContent","secondCon","flexDirection","alignItems","marginTop","spacing","card1","minHeight","breakpoints","only","width","btn1","padding","backgroundColor","height","color","input","minWidth","maxWidth","up","btnbtn","marginBottom","form","Yup","ref","msg","test","name","exclusive","message","params","reference","path","value","this","resolve","RecoverValidation","shape","email","required","password","confirmPassword","equalTo","ForgotPassword","token","useParams","classes","notify","useNotifications","recoverPassword","formData","a","api","axios","post","res","console","log","type","browserHistory","push","Header","Grid","className","item","xs","Typography","initialValues","validationSchema","onSubmit","submitForm","lg","BonfireField","placeholder","Button","onClick","variant","Footer"],"mappings":"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","file":"static/js/26.c8a493ed.chunk.js","sourcesContent":["import { makeStyles } from \"@material-ui/core\";\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    paddingTop: \"170px\",\r\n    overfloWx: \"hidden\"\r\n  },\r\n  header: {\r\n    fontFamily: \"Futura-Bold\",\r\n    fontSize: \"20px\",\r\n    textAlign: \"center\",\r\n    fontFamily: \"Roboto\",\r\n    fontWeight: 500,\r\n    marginBottom: \"40px !important\",\r\n  },\r\n  firstCon: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n  },\r\n  secondCon: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  card1: {\r\n    minHeight: \"50vh\",\r\n    marginTop: theme.spacing(5),\r\n    [theme.breakpoints.only(\"lg\")]: {\r\n      width: \"50%\",\r\n    },\r\n    [theme.breakpoints.only(\"md\")]: {\r\n      width: \"50%\",\r\n    },\r\n    [theme.breakpoints.only(\"xs\")]: {\r\n      width: \"90%\",\r\n    },\r\n    [theme.breakpoints.only(\"sm\")]: {\r\n      width: \"70%\",\r\n    },\r\n  },\r\n  btn1: {\r\n    fontSize: \"15px\",\r\n    padding: \"10px 20px\",\r\n    backgroundColor: \"#35cf94\",\r\n    width: \"100px\",\r\n    height: \"30px\",\r\n    color: \"white\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"#35cf94\",\r\n    },\r\n  },\r\n  input: {\r\n    minWidth: \"200px\",\r\n    maxWidth: \"500px\",\r\n    fontSize: \"30px !important\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      width: \"50%\",\r\n    },\r\n    [theme.breakpoints.only(\"sm\")]: {\r\n      width: \"80%\",\r\n    },\r\n    [theme.breakpoints.only(\"sm\")]: {\r\n      width: \"80%\",\r\n    },\r\n    \"& .MuiInput-underline\": {},\r\n  },\r\n  btnbtn: {\r\n    marginTop: \"50px\",\r\n    marginBottom: \"50px\",\r\n  },\r\n  form: {\r\n    width: \"100%\",\r\n    minWidth: \"200px\",\r\n    maxWidth: \"400px\",\r\n  },\r\n}));\r\n","import * as Yup from \"yup\";\r\n\r\nfunction equalTo(ref, msg) {\r\n    return Yup.mixed().test({\r\n        name: \"equalTo\",\r\n        exclusive: false,\r\n        message: msg || \"${path} must be the same as ${reference}\",\r\n        params: {\r\n            reference: ref.path,\r\n        },\r\n        test: function (value) {\r\n            return value === this.resolve(ref);\r\n        },\r\n    });\r\n}\r\n\r\nYup.addMethod(Yup.string, \"equalTo\", equalTo);\r\n\r\nexport const RecoverValidation = Yup.object().shape({\r\n    email: Yup.string().email().required('Məlumat zəruridir'),\r\n    password: Yup.string().required(\"Məlumat zəruridir\"),\r\n    // .matches(\r\n    //     regexPassword,\r\n    //     'Ən az 6 simvoldan ibarət olmalıdır',\r\n    // ),\r\n    confirmPassword: Yup.string()\r\n        .equalTo(Yup.ref(\"password\"), \"Şifrələr eyni deyil!\")\r\n        .required(\"Məlumat zəruridir\"),\r\n});\r\n","import { Button, Grid, Typography } from '@material-ui/core'\r\nimport Footer from 'components/Footer'\r\nimport Header from 'components/Header'\r\nimport { Form, Formik } from 'formik'\r\nimport React from 'react'\r\nimport { useStyles } from './ForgotPassword.style'\r\nimport { api } from 'api'\r\nimport { useParams } from 'react-router-dom'\r\nimport { BonfireField } from 'components/BonfireField/BonfireField'\r\nimport { RecoverValidation } from './validation'\r\nimport { useNotifications } from 'context/NotificationsContext'\r\nimport browserHistory from 'browser-history/browser-history'\r\n\r\n\r\ninterface ParamTypes {\r\n    token: string;\r\n}\r\n\r\nconst ForgotPassword = () => {\r\n    const { token } = useParams<ParamTypes>()\r\n    const classes = useStyles();\r\n\r\n    const { notify } = useNotifications();\r\n\r\n    const initialValues = {\r\n        email: \"\",\r\n        password: '',\r\n        confirmPassword: \"\",\r\n    }\r\n    const recoverPassword = async (formData): Promise<void> => {\r\n        try {\r\n            const axios = await api();\r\n            const res = await axios.post(`user/newPassword`, { ...formData, token })\r\n            console.log(res)\r\n            notify({\r\n                type: \"success\",\r\n                message: \"Şifrəniz uğurla dəyişdirildi!\"\r\n            })\r\n            browserHistory.push('/')\r\n        } catch (error) {\r\n            notify({\r\n                type: \"error\",\r\n                message: \"Şifrəniz dəyişdirilmədi! Yenidən cəhd edin\"\r\n            })\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <Header />\r\n            <Grid container className={classes.container}>\r\n                <Grid item xs={12}>\r\n                    <Typography className={classes.header}>\r\n                        Zəhmət olmasa şifrənizi yazın və təsdiqləyin.\r\n                    </Typography>\r\n                </Grid>\r\n\r\n                <Grid item xs={12}>\r\n                    <Formik\r\n                        initialValues={initialValues}\r\n                        validationSchema={RecoverValidation}\r\n                        onSubmit={recoverPassword}>\r\n                        {({ submitForm }) => {\r\n                            return (\r\n                                <Form>\r\n                                    <Grid className={classes.firstCon} item container lg={12}>\r\n                                        <Grid container className={classes.secondCon} item spacing={3}>\r\n                                            <div className={classes.form}>\r\n                                                <BonfireField\r\n                                                    name=\"email\"\r\n                                                    type=\"text\"\r\n                                                    placeholder=\"Email\"\r\n                                                />\r\n                                                <BonfireField\r\n                                                    name=\"password\"\r\n                                                    type=\"password\"\r\n                                                    placeholder=\"Password\"\r\n                                                />\r\n                                                <BonfireField\r\n                                                    name=\"confirmPassword\"\r\n                                                    type=\"password\"\r\n                                                    placeholder=\"Confirm Password\"\r\n                                                />\r\n                                            </div>\r\n                                            <Grid className={classes.btnbtn} item>\r\n                                                <Button onClick={submitForm} variant=\"contained\" className={`${classes.btn1} btn-primary btn-sm`}>\r\n                                                    Göndər\r\n                                                </Button>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Form>\r\n                            );\r\n                        }}\r\n                    </Formik>\r\n                </Grid>\r\n            </Grid>\r\n            <Footer />\r\n        </>\r\n    )\r\n}\r\nexport default ForgotPassword;"],"sourceRoot":""}