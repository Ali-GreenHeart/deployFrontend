{"version":3,"sources":["routes/AppRouter.tsx","layout/App/index.js","routes/AdminRouter.tsx","layout/admin/auth-guard.tsx","api/api-admin.js","layout/admin/index.tsx","routes/DashboardRouter.tsx","layout/dashboard/auth-guard.jsx","layout/dashboard/index.tsx","routes/index.js","theme.ts","App.tsx","reportWebVitals.ts","serviceWorker.ts","index.tsx","utils/validationHelper.ts","context/AuthContext.tsx","browser-history/browser-history.js","components/snackbar/snackbar.style.ts","components/snackbar/snackbar.tsx","context/NotificationsContext.tsx","components/spinner/index.tsx","api/index.js"],"names":["HomePage","lazy","then","module","default","CustomPage","Custom","SellOnlinePage","SellOnline","CreateYourPage","FundraisingPage","Fundraising","Catalog","Templates","Contact","ForgotPasswordPage","RecoverPasswordPage","ShopPage","Shop","StorePage","Store","SingleProductPage","Product","NotFoundPage","NotFound","EditorPage","Editor","AboutPage","About","TrackPage","Track","CampaignDesignPage","CampaignDesign","AppRouter","exact","path","component","useStyles","makeStyles","theme","root","display","backgroundColor","content","flexGrow","height","overflow","container","minWidth","padding","width","App","url","classes","className","Container","maxWidth","AdminRouter","withRouter","children","useAuth","admin","isAdminLoggedIn","useState","authenticated","setAuthenticated","validateAdmin","a","axios","create","baseURL","headers","authorization","getAdminAccessToken","post","token","email","res","data","output","useEffect","browserHistory","push","minHeight","Admin","id","OverviewPage","Overview","AccountPage","Account","PayoutsPage","Payouts","MyOrdersPage","MyOrders","CampaignsPage","Campaigns","HelpPage","Help","DashboardRouter","user","isLoggedIn","removeAuthData","console","log","notify","useNotifications","validateUser","type","message","Dashboard","Routes","history","onUpdate","window","scrollTo","fallback","style","color","createMuiTheme","palette","primary","main","secondary","error","red","A400","success","light","green","dark","contrastText","typography","fontFamily","join","fontSize","fontWeightLight","fontWeightRegular","fontWeightMedium","customTheme","ThemeProvider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","isEmpty","value","undefined","ACCESS_TOKEN_KEY","ADMIN_ACCESS_TOKEN_KEY","getAccessToken","accessToken","localStorage","getItem","includes","JSON","stringify","_","AuthContext","createContext","saveAuthData","saveAdminAuthData","removeAdminAuthData","useContext","AuthProvider","useLocalStorage","raw","setAccessToken","adminAccessToken","setAdminAccessToken","setUser","setAdmin","Provider","authData","normalizedUser","fullName","name","createBrowserHistory","close","spacing","info","warning","amber","alignItems","icon","iconVariant","opacity","marginRight","variantIcon","Snackbar","open","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","SnackbarContent","aria-describedby","Icon","action","IconButton","key","aria-label","onClick","NotificationsContext","DEFAULT_SNACK_STATE","NotificationsProvider","React","snack","setSnackState","duration","reason","Spinner","title","disableShrink","spinnerStyle","justify","direction","item","marginTop","api"],"mappings":"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","file":"static/js/main.cc522f5d.chunk.js","sourcesContent":["import React, { lazy } from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\n\r\n// ---------------------------------Home-----------------------------------------\r\nconst HomePage = lazy(() => import('../pages/HomePage/HomePage').then(module => ({ default: module.HomePage })));\r\nconst CustomPage = lazy(() => import('../components/Custom/custom').then(module => ({ default: module.Custom })));\r\nconst SellOnlinePage = lazy(() => import('../components/SellOnline/SellOnline').then(module => ({ default: module.SellOnline })));\r\nconst CreateYourPage = lazy(() => import('../components/CreateYourStore/createYourStore'));\r\nconst FundraisingPage = lazy(() => import('../components/Fundraising').then(module => ({ default: module.Fundraising })));\r\nconst Catalog = lazy(() => import('../pages/Catalog'));\r\nconst Templates = lazy(() => import('../pages/Templates'));\r\nconst Contact = lazy(() => import('../pages/Contact'));\r\nconst ForgotPasswordPage = lazy(() => import('../pages/ForgotPassword/ForgotPassword'));\r\nconst RecoverPasswordPage = lazy(() => import('../pages/ForgotPassword/RecoverPasswordPage'));\r\nconst ShopPage = lazy(() => import('../pages/shopPages').then(module => ({ default: module.Shop })));\r\nconst StorePage = lazy(() => import('../pages/Store').then(module => ({ default: module.Store })));\r\nconst SingleProductPage = lazy(() => import('../pages/shopPages').then(module => ({ default: module.Product })));\r\nconst NotFoundPage = lazy(() => import('../pages/NotFound').then(module => ({ default: module.NotFound })));\r\nconst EditorPage = lazy(() => import('../pages/EditorPages').then(module => ({ default: module.Editor })))\r\nconst AboutPage = lazy(() => import('../pages/about').then(module => ({ default: module.About })))\r\nconst TrackPage = lazy(() => import('../pages/track').then(module => ({ default: module.Track })))\r\nconst CampaignDesignPage = lazy(() => import('../pages/EditorPages/pages/editor/components/campaignDesignPage').then(module => ({ default: module.CampaignDesign })))\r\n\r\nconst AppRouter: React.FC = () => (\r\n    <Switch>\r\n        {/* App ROuting */}\r\n        <Route exact path=\"/new-password/:token\" component={RecoverPasswordPage} />\r\n        <Route exact path=\"/\" component={HomePage} />\r\n        <Route exact path=\"/shop\" component={ShopPage} />\r\n        <Route exact path=\"/custom\" component={CustomPage} />\r\n        <Route exact path=\"/sell-online\" component={SellOnlinePage} />\r\n        <Route exact path=\"/fundraising\" component={FundraisingPage} />\r\n        <Route exact path='/catalog' component={Catalog} />\r\n        <Route exact path='/templates' component={Templates} />\r\n        <Route exact path='/contact' component={Contact} />\r\n        <Route exact path='/create-store' component={CreateYourPage} />\r\n        <Route exact path='/product' component={SingleProductPage} />\r\n        <Route exact path='/forgot-password' component={ForgotPasswordPage} />\r\n        <Route exact path='/store' component={StorePage} />\r\n        <Route exact path='/about' component={AboutPage} />\r\n        <Route exact path='/editor' component={EditorPage} />\r\n        <Route exact path='/track' component={TrackPage} />\r\n        <Route exact path='/editor/campaign-design' component={CampaignDesignPage} />\r\n\r\n        <Route component={NotFoundPage} />\r\n    </Switch>\r\n);\r\nexport default AppRouter;\r\n","import { Container, makeStyles } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport AppRouter from \"../../routes/AppRouter\";\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    backgroundColor: \"#F1F5F8\",\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    height: \"100vh\",\r\n    overflow: \"auto\",\r\n  },\r\n  container: {\r\n    minWidth: \"600px\",\r\n    padding: 0,\r\n    \"& .MuiGrid-spacing-xs-1\": {\r\n      width: \"calc(100% + 3px)\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst App = ({ url, ...props }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <main className={classes.content}>\r\n        <Container maxWidth=\"xl\" className={classes.container}>\r\n          <AppRouter url={url} />\r\n        </Container>\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React, { lazy } from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\n\r\nconst NotFoundPage = lazy(() => import('../pages/NotFound').then((module) => ({ default: module.NotFound })));\r\n\r\nconst AdminRouter: React.FC = () => (\r\n    <Switch>\r\n        <Route component={NotFoundPage} />\r\n    </Switch>\r\n);\r\nexport default AdminRouter;\r\n","import React, { Fragment, useEffect, useState } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { useAuth, getAdminAccessToken } from 'context/AuthContext';\r\nimport { api } from 'api/api-admin';\r\nimport browserHistory from 'browser-history/browser-history';\r\n\r\nconst AuthGuard: React.FC = ({ children }) => {\r\n    const { admin, isAdminLoggedIn } = useAuth();\r\n    const [authenticated, setAuthenticated] = useState(true);\r\n\r\n    const validateAdmin = async () => {\r\n        try {\r\n            const axios = await api();\r\n            const res = await axios.post('admin/validate', { token: getAdminAccessToken(), email: admin?.email });\r\n            setAuthenticated(res.data.output);\r\n        } catch {\r\n            setAuthenticated(false);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (admin) {\r\n            validateAdmin();\r\n        }\r\n        if (!authenticated || !isAdminLoggedIn) {\r\n            browserHistory.push('/admin/login');\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (!authenticated || !isAdminLoggedIn) {\r\n            browserHistory.push('/admin/login');\r\n        }\r\n    }, [authenticated]);\r\n\r\n    return <Fragment>{children}</Fragment>;\r\n};\r\n\r\nexport default withRouter(AuthGuard);\r\n","import axios from 'axios';\r\nimport { getAdminAccessToken } from 'context/AuthContext';\r\n\r\nexport const api = () => {\r\n    return axios.create({\r\n        baseURL: `https://localhost:44323/api/`,\r\n        headers: {\r\n            authorization: `Bearer ${getAdminAccessToken()}`,\r\n            'Content-Type': 'application/json',\r\n        },\r\n    });\r\n};\r\n","import { Container, makeStyles } from '@material-ui/core';\r\nimport React from 'react';\r\nimport AdminRouter from 'routes/AdminRouter';\r\nimport AuthGuard from './auth-guard';\r\n\r\nexport const useStyles = makeStyles(() => ({\r\n    container: {\r\n        padding: 0,\r\n        minHeight: '95vh',\r\n        maxWidth: 'unset',\r\n    },\r\n}));\r\n\r\nconst Admin: React.FC = () => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <AuthGuard>\r\n            <div id=\"back-to-top-anchor\" />\r\n            <Container className={classes.container}>\r\n                <AdminRouter />\r\n            </Container>\r\n        </AuthGuard>\r\n    );\r\n};\r\n\r\nexport default Admin;\r\n","import React, { lazy } from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\n\r\n\r\nconst OverviewPage = lazy(() => import(\"../pages/dashboard\").then((module) => ({ default: module.Overview })));\r\nconst AccountPage = lazy(() => import(\"../pages/dashboard\").then((module) => ({ default: module.Account })));\r\nconst PayoutsPage = lazy(() => import(\"../pages/dashboard\").then((module) => ({ default: module.Payouts })));\r\nconst MyOrdersPage = lazy(() => import(\"../pages/dashboard\").then((module) => ({ default: module.MyOrders })));\r\nconst CampaignsPage = lazy(() => import(\"../pages/dashboard\").then((module) => ({ default: module.Campaigns })));\r\nconst StorePage = lazy(() => import(\"../pages/dashboard\").then((module) => ({ default: module.Store })));\r\nconst HelpPage = lazy(() => import(\"../pages/dashboard\").then((module) => ({ default: module.Help })));\r\n\r\n\r\nconst NotFoundPage = lazy(() => import('../pages/NotFound').then(module => ({ default: module.NotFound })));\r\n\r\n\r\nconst DashboardRouter: React.FC = () => (\r\n    <Switch>\r\n        <Route exact path={'/dashboard'} component={OverviewPage} />\r\n        <Route exact path={'/dashboard/account'} component={AccountPage} />\r\n        <Route exact path={'/dashboard/payouts'} component={PayoutsPage} />\r\n        <Route exact path={'/dashboard/my-orders'} component={MyOrdersPage} />\r\n        <Route exact path={'/dashboard/campaigns'} component={CampaignsPage} />\r\n        <Route exact path={'/dashboard/store'} component={StorePage} />\r\n        <Route exact path={'/dashboard/help'} component={HelpPage} />\r\n        <Route component={NotFoundPage} />\r\n    </Switch>\r\n);\r\nexport default DashboardRouter;\r\n","import React, { Fragment, useEffect, useState } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { useAuth, getAccessToken } from 'context/AuthContext';\r\nimport { api } from 'api';\r\nimport browserHistory from 'browser-history/browser-history';\r\nimport { useNotifications } from 'context/NotificationsContext';\r\n\r\nconst AuthGuard = ({ children }) => {\r\n    const { user, isLoggedIn, removeAuthData } = useAuth();\r\n    console.log(\"12234e\", user)\r\n    const [authenticated, setAuthenticated] = useState(true);\r\n    const { notify } = useNotifications()\r\n\r\n    const validateUser = async () => {\r\n        try {\r\n            // const axios = await api();\r\n            // const res = await axios.post('user/validate', { token: getAccessToken(), email: user.email });\r\n            setAuthenticated(true);\r\n        } catch {\r\n            setAuthenticated(false);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (user) {\r\n            validateUser();\r\n        }\r\n        if (!authenticated || !isLoggedIn) {\r\n            removeAuthData();\r\n            browserHistory.push('/');\r\n            notify({\r\n                type: \"error\",\r\n                message: \"Please, log in!\"\r\n            })\r\n        }\r\n    }, [user, authenticated, isLoggedIn]);\r\n\r\n    useEffect(() => {\r\n        if (!authenticated || !isLoggedIn) {\r\n            removeAuthData();\r\n            browserHistory.push('/');\r\n            notify({\r\n                type: \"error\",\r\n                message: \"Please, log in!\"\r\n            })\r\n        }\r\n    }, [authenticated, isLoggedIn]);\r\n\r\n    return <Fragment>{children}</Fragment>;\r\n\r\n    // return authenticated ? <Fragment>{children}</Fragment> : null;\r\n};\r\n\r\nexport default withRouter(AuthGuard);\r\n","import { Container, makeStyles } from '@material-ui/core';\r\nimport React from 'react';\r\nimport DashboardRouter from 'routes/DashboardRouter';\r\nimport AuthGuard from './auth-guard';\r\n\r\nexport const useStyles = makeStyles(() => ({\r\n    container: {\r\n        padding: 0,\r\n        minHeight: '95vh',\r\n        maxWidth: 'unset',\r\n    },\r\n}));\r\n\r\nconst Dashboard: React.FC = () => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <AuthGuard>\r\n            <div id=\"back-to-top-anchor\" />\r\n            <Container className={classes.container}>\r\n                <DashboardRouter />\r\n            </Container>\r\n        </AuthGuard>\r\n    );\r\n};\r\n\r\nexport default Dashboard;\r\n","import React, { Suspense } from \"react\";\r\nimport { Router, Switch, Route } from \"react-router-dom\";\r\nimport App from \"../layout/App\";\r\nimport Admin from \"../layout/admin\";\r\nimport { Spinner } from \"../components/spinner\";\r\nimport browserHistory from \"../browser-history/browser-history\";\r\nimport Dashboard from \"layout/dashboard\";\r\n\r\nconst Routes = () => {\r\n  return (\r\n    <Router history={browserHistory} onUpdate={() => window.scrollTo(0, 0)}>\r\n      <Suspense fallback={ <Spinner style={{ width: \"100vw\", height: \"100vh\" }} color=\"primary\" /> } >\r\n        <Switch>\r\n          <Route path=\"/admin\" component={Admin} />\r\n          <Route path=\"/dashboard\" component={Dashboard} />\r\n          <Route path=\"/\" component={App} />\r\n        </Switch>\r\n      </Suspense>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default Routes;\r\n","import { green, red } from '@material-ui/core/colors';\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\n\r\n// A custom theme for this app\r\nconst theme = () =>\r\n    createMuiTheme({\r\n        palette: {\r\n            primary: {\r\n                main: '#3BCE95',\r\n            },\r\n            secondary: {\r\n                main: '#bdcad8',\r\n            },\r\n            error: {\r\n                main: red.A400,\r\n            },\r\n            success: {\r\n                light: green[600],\r\n                main: green[500],\r\n                dark: green[400],\r\n                contrastText: '#fff',\r\n            },\r\n        },\r\n        typography: {\r\n            fontFamily: ['sans-serif', 'Roboto'].join(','),\r\n            fontSize: 14,\r\n            fontWeightLight: 300,\r\n            fontWeightRegular: 400,\r\n            fontWeightMedium: 500,\r\n        },\r\n    });\r\n\r\nexport default theme;\r\n","import React from 'react';\r\nimport Routes from './routes';\r\nimport './sass/css/style.scss';\r\nimport { AuthProvider } from 'context/AuthContext'\r\nimport { NotificationsProvider } from 'context/NotificationsContext'\r\nimport { ThemeProvider } from '@material-ui/core';\r\nimport customTheme from 'theme'\r\n\r\nfunction App() {\r\n  const theme = customTheme()\r\n  return (\r\n    <>\r\n      <ThemeProvider theme={theme} >\r\n        <NotificationsProvider>\r\n          <AuthProvider>\r\n            <Routes />\r\n          </AuthProvider>\r\n        </NotificationsProvider>\r\n      </ThemeProvider>\r\n    </>\r\n  );\r\n}\r\nexport default App;\r\n\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n    if (onPerfEntry && onPerfEntry instanceof Function) {\r\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n            getCLS(onPerfEntry);\r\n            getFID(onPerfEntry);\r\n            getFCP(onPerfEntry);\r\n            getLCP(onPerfEntry);\r\n            getTTFB(onPerfEntry);\r\n        });\r\n    }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n        // [::1] is the IPv6 localhost address.\r\n        window.location.hostname === '[::1]' ||\r\n        // 127.0.0.0/8 are considered localhost for IPv4.\r\n        window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\r\n);\r\n\r\ntype Config = {\r\n    onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n    onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then((registration) => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing;\r\n                if (installingWorker == null) {\r\n                    return;\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\r\n                            );\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration);\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.');\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration);\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n            };\r\n        })\r\n        .catch((error) => {\r\n            console.error('Error during service worker registration:', error);\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n        headers: { 'Service-Worker': 'script' },\r\n    })\r\n        .then((response) => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type');\r\n            if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then((registration) => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload();\r\n                    });\r\n                });\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log('No internet connection found. App is running in offline mode.');\r\n        });\r\n}\r\n\r\nexport function register(config?: Config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return;\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config);\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                            'worker. To learn more, visit https://bit.ly/CRA-PWA',\r\n                    );\r\n                });\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready\r\n            .then((registration) => {\r\n                registration.unregister();\r\n            })\r\n            .catch((error) => {\r\n                console.error(error.message);\r\n            });\r\n    }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById('root'),\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\nserviceWorker.unregister();\r\n","export const isEmpty = (value: any): boolean => {\r\n  return value === null || value === undefined || value === \"\";\r\n};\r\n\r\nexport const isEmptyObject = (object: any): boolean =>\r\n  object && Object.values(object).every((x) => x === null || x === \"\");\r\n","import React, { createContext, useContext } from 'react';\r\nimport { useLocalStorage } from 'react-use';\r\nimport { isEmpty } from 'utils/validationHelper';\r\n\r\nconst USER_KEY = '@Auth/user';\r\nconst ADMIN_KEY = '@Auth/admin';\r\nconst ACCESS_TOKEN_KEY = '@Auth/accessToken';\r\nconst ADMIN_ACCESS_TOKEN_KEY = '@Auth/admin/accessToken';\r\n\r\nexport const getAccessToken = (): string | null => {\r\n    const accessToken = localStorage.getItem(ACCESS_TOKEN_KEY);\r\n\r\n    if ([null, undefined, 'null', 'undefined'].includes(accessToken)) {\r\n        return null;\r\n    }\r\n\r\n    try {\r\n        return JSON.stringify(accessToken);\r\n    } catch (_) {\r\n        return accessToken;\r\n    }\r\n};\r\n\r\nexport const getAdminAccessToken = (): string | null => {\r\n    const accessToken = localStorage.getItem(ADMIN_ACCESS_TOKEN_KEY);\r\n\r\n    if ([null, undefined, 'null', 'undefined'].includes(accessToken)) {\r\n        return null;\r\n    }\r\n\r\n    try {\r\n        return JSON.stringify(accessToken);\r\n    } catch (_) {\r\n        return accessToken;\r\n    }\r\n};\r\n\r\ntype AuthUserProps =\r\n    | {\r\n        email?: string;\r\n        fullName?: string;\r\n        id?: string;\r\n    }\r\n    | null\r\n    | undefined;\r\n\r\ntype AuthContextProps = {\r\n    isLoggedIn: boolean;\r\n    isAdminLoggedIn: boolean;\r\n    user: AuthUserProps;\r\n    admin: AuthUserProps;\r\n    saveAuthData: (authData: any) => void;\r\n    saveAdminAuthData: (authData: any) => void;\r\n    removeAuthData: () => void;\r\n    removeAdminAuthData: () => void;\r\n};\r\n\r\nconst AuthContext = createContext<AuthContextProps>({\r\n    isLoggedIn: false,\r\n    isAdminLoggedIn: false,\r\n    user: {},\r\n    admin: {},\r\n    saveAuthData: () => { },\r\n    saveAdminAuthData: () => { },\r\n    removeAuthData: () => { },\r\n    removeAdminAuthData: () => { },\r\n});\r\nexport const useAuth = (): AuthContextProps => useContext<AuthContextProps>(AuthContext);\r\n\r\nexport const AuthProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\r\n    const [accessToken, setAccessToken] = useLocalStorage(ACCESS_TOKEN_KEY, null, {\r\n        raw: true,\r\n    });\r\n    const [adminAccessToken, setAdminAccessToken] = useLocalStorage(ADMIN_ACCESS_TOKEN_KEY, null, {\r\n        raw: true,\r\n    });\r\n\r\n    const [user, setUser] = useLocalStorage<AuthUserProps>(USER_KEY, null);\r\n    const [admin, setAdmin] = useLocalStorage<AuthUserProps>(ADMIN_KEY, null);\r\n\r\n    const isLoggedIn = !isEmpty(accessToken) && !!user;\r\n    const isAdminLoggedIn = !isEmpty(adminAccessToken) && !!admin;\r\n\r\n    const saveAuthData = (authData): void => {\r\n        setAccessToken(authData.accessToken);\r\n        const normalizedUser: AuthUserProps = {\r\n            fullName: authData?.user.name,\r\n            email: authData?.user.email,\r\n            id: authData?.user.id,\r\n        };\r\n        setUser(normalizedUser);\r\n    };\r\n\r\n    const saveAdminAuthData = (authData): void => {\r\n        setAdminAccessToken(authData.accessToken);\r\n\r\n        const normalizedUser: AuthUserProps = {\r\n            fullName: authData?.user.name,\r\n            email: authData?.user.email,\r\n            id: authData?.user.id,\r\n        };\r\n        setAdmin(normalizedUser);\r\n    };\r\n\r\n    const removeAuthData = (): void => {\r\n        setAccessToken(null);\r\n        setUser(null);\r\n    };\r\n\r\n    const removeAdminAuthData = (): void => {\r\n        setAdminAccessToken(null);\r\n        setAdmin(null);\r\n    };\r\n\r\n    return (\r\n        <AuthContext.Provider\r\n            value={{\r\n                isLoggedIn,\r\n                isAdminLoggedIn,\r\n                user,\r\n                admin,\r\n                saveAdminAuthData,\r\n                saveAuthData,\r\n                removeAdminAuthData,\r\n                removeAuthData,\r\n            }}\r\n        >\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n};\r\n","import { createBrowserHistory } from 'history';\r\n\r\nexport default createBrowserHistory({\r\n    \r\n});\r\n","import { makeStyles } from '@material-ui/core/styles';\r\nimport { amber, green } from '@material-ui/core/colors';\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n    close: {\r\n        padding: theme.spacing(0.5),\r\n    },\r\n    success: {\r\n        backgroundColor: green[600],\r\n    },\r\n    error: {\r\n        backgroundColor: theme.palette.error.dark,\r\n    },\r\n    info: {\r\n        backgroundColor: theme.palette.primary.main,\r\n    },\r\n    warning: {\r\n        backgroundColor: amber[700],\r\n    },\r\n    message: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        fontSize: \"16px\"\r\n    },\r\n    icon: {\r\n        fontSize: 20,\r\n    },\r\n    iconVariant: {\r\n        opacity: 0.9,\r\n        marginRight: theme.spacing(1),\r\n    },\r\n}));\r\n","import { Icon, IconButton, Snackbar as MUISnackbar, SnackbarContent, SnackbarCloseReason } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { useStyles } from './snackbar.style';\r\n\r\nconst variantIcon = {\r\n    success: 'check',\r\n    warning: 'warning',\r\n    error: 'error',\r\n    info: 'info',\r\n};\r\nexport type SnackbarType = 'success' | 'error' | 'info' | 'warning';\r\n\r\ntype SnackbarProps = {\r\n    open?: boolean;\r\n    autoHideDuration?: number | null;\r\n    onClose: (event?: React.SyntheticEvent<any, Event>, reason?: SnackbarCloseReason) => void;\r\n    type: string;\r\n    message: string;\r\n};\r\nexport const Snackbar: React.FC<SnackbarProps> = ({ open, autoHideDuration, onClose, type, message }) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <MUISnackbar\r\n            anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }}\r\n            open={open}\r\n            autoHideDuration={autoHideDuration}\r\n            onClose={onClose}\r\n        >\r\n            <SnackbarContent\r\n                className={classes[type]}\r\n                aria-describedby=\"client-snackbar\"\r\n                message={\r\n                    <span className={classes.message} id=\"client-snackbar\">\r\n                        <Icon className={`${classes.icon} ${classes.iconVariant}`}>{variantIcon[type]}</Icon>\r\n                        {message}\r\n                    </span>\r\n                }\r\n                action={[\r\n                    <IconButton\r\n                        key=\"close\"\r\n                        aria-label=\"close\"\r\n                        color=\"inherit\"\r\n                        className={classes.close}\r\n                        onClick={onClose}\r\n                    >\r\n                        <Icon className={classes.icon}>close</Icon>\r\n                    </IconButton>,\r\n                ]}\r\n            />\r\n        </MUISnackbar>\r\n    );\r\n};\r\n","import { SnackbarCloseReason } from '@material-ui/core';\r\nimport { Snackbar } from 'components/snackbar';\r\nimport React, { createContext, ReactNode, useContext } from 'react';\r\n\r\ninterface notifyType {\r\n    duration?: number | null;\r\n    message: string;\r\n    type: string;\r\n};\r\n\r\ninterface NotificationsContextProps {\r\n    notify: (obj: notifyType) => void;\r\n    close: () => void;\r\n};\r\n\r\nconst NotificationsContext = createContext<NotificationsContextProps>({ notify: () => { }, close: () => { } });\r\nexport const useNotifications = (): NotificationsContextProps =>\r\n    useContext<NotificationsContextProps>(NotificationsContext);\r\n\r\nconst DEFAULT_SNACK_STATE = {\r\n    open: false,\r\n    autoHideDuration: 3000,\r\n    message: '',\r\n    type: '',\r\n};\r\n\r\nexport const NotificationsProvider: React.FC<{ children: ReactNode }> = ({ children }) => {\r\n    const [snack, setSnackState] = React.useState(DEFAULT_SNACK_STATE);\r\n\r\n    const notify = ({ duration, message, type }: notifyType): void => {\r\n        const newState = {\r\n            open: true,\r\n            autoHideDuration: duration || 3000,\r\n            type: type || 'info',\r\n            message,\r\n        };\r\n        setSnackState(newState);\r\n    };\r\n\r\n    const close = (): void => setSnackState(DEFAULT_SNACK_STATE);\r\n\r\n    const onClose = (_?: any, reason?: SnackbarCloseReason): void => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n\r\n        close();\r\n    };\r\n\r\n    return (\r\n        <NotificationsContext.Provider value={{ notify, close }}>\r\n            {children}\r\n            <Snackbar {...snack} onClose={onClose} />\r\n        </NotificationsContext.Provider>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Typography } from '@material-ui/core';\r\n\r\ntype SpinnerProps = {\r\n    title?: string;\r\n    disableShrink?: boolean;\r\n    style?: React.CSSProperties;\r\n    spinnerStyle?: React.CSSProperties;\r\n    color?: 'inherit' | 'secondary' | 'primary';\r\n};\r\n\r\nexport const Spinner: React.FC<SpinnerProps> = ({ title, disableShrink, style, spinnerStyle, color }) => {\r\n    return (\r\n        <Grid container justify=\"center\" alignItems=\"center\" direction=\"column\" style={{ ...style, height: \"100vh\", width: \"100vw\" }}>\r\n            <CircularProgress style={{ ...spinnerStyle }} disableShrink={disableShrink} color={color || 'primary'} />\r\n\r\n            {title && (\r\n                <Grid item style={{ marginTop: '5px' }}>\r\n                    <Typography> {title}</Typography>\r\n                </Grid>\r\n            )}\r\n        </Grid>\r\n    );\r\n};\r\n","import axios from \"axios\";\r\nimport { getAccessToken } from \"context/AuthContext\";\r\n\r\nexport const api = (url) => {\r\n  return axios.create({\r\n    // baseURL: url || \"https://localhost:44323/api/\",   // local\r\n    baseURL: url || \"http://rasimgunebaxan-001-site1.ftempurl.com/api/\", // global\r\n    headers: {\r\n      authorization: `${getAccessToken()}`,\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  });\r\n};\r\n"],"sourceRoot":""}